#pragma checksum "C:\Users\roadmin\Documents\WEF\WEF\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4c97bc7647790097eeb4e06ad392edfa082054bb"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\roadmin\Documents\WEF\WEF\Views\_ViewImports.cshtml"
using WEF;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\roadmin\Documents\WEF\WEF\Views\_ViewImports.cshtml"
using WEF.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4c97bc7647790097eeb4e06ad392edfa082054bb", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0917af899726ff9caef09705c3154e8682f57f12", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\roadmin\Documents\WEF\WEF\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<style>
    .codebox {
        border: 1px solid black;
        background-color: #FFFFFF;
        width: 100%;
        overflow: auto;
        padding: 10px;
    }

    .codebox code {
        font-size: 0.9em;
        color: black
    }
</style>

<div class=""text-left"">
    <center><h1 style=""color: #FFFFFF"" class=""display-4""><strong>Windows Event Forwarding Application</strong></h1></center><br />
    <p>
        ASP.NET Core 3.1 web application that is used to investigate log files that have a high indication of compromise. These logs were collected from all devices in the environment. Below is a list of Events collected.<br />
        <br />
        <strong style=""color: #FFFFFF"">Domain Computer Events: </strong><br />
        <ul>
            <li><strong>1102:</strong> Event Log Cleared</li>
            <li><strong>4732:</strong> User added to an Administrators group</li>
            <li><strong>4733:</strong> User removed from an Administrators group</li>
            <li><stron");
            WriteLiteral(@"g>4720:</strong> Local User account created</li>
            <li><strong>4726:</strong> Local User account deleted</li>
            <li><strong>7045:</strong> New Service Installed</li>
        </ul>
        <br />
        <strong style=""color: #FFFFFF"">Domain Controller Events: </strong><br />
        <ul>
            <li><strong>1102:</strong> Event Log Cleared</li>
            <li><strong>4732:</strong> User added to an Administrators group</li>
            <li><strong>4733:</strong> User removed from an Administrators group</li>
            <li><strong>4720:</strong> Local User account created</li>
            <li><strong>4726:</strong> Local User account deleted</li>
            <li><strong>7045:</strong> New Service Installed</li>
            <li><strong>4756:</strong> Domain User Added to a Universal Security Group</li>
            <li><strong>4757:</strong> Domain User Removed from a Universal Security Group</li>
            <li><strong>4728:</strong> Domain User Added to Global Securit");
            WriteLiteral(@"y Group</li>
            <li><strong>4729:</strong> Domain User Removed Global Security Group</li>
            <li><strong>4649:</strong> Replay Attack Detected</li>
            <li><strong>4723:</strong> User Attempted to Change Password</li>
            <li><strong>4724:</strong> Admin Attempted to change someone else's password</li>
        </ul>
    </p>
    <p>
        This web application is built to work with the set up of Windows Event Forwarding where the log files are collected and sent to a SQL database.
        Directions to configure the SQL database, Task Scheduler Alerts, and the Windows Event Forwarding Configuration in an environment can be found <a href=""https://github.com/tobor88/WindowsEventForwarding""><strong>HERE</strong></a>.
    </p>

    <h4 style=""color: #FFFFFF""><strong>Installed and Required Packages</strong></h4>
    <p>
        Issue the below commands in Visual Studio 2019 Package Manager Console to install required packages.
        <div class=""codebox"">
       ");
            WriteLiteral(@"     <code>
                PS> Install-Package Microsoft.EntityFrameworkCore.SqlServer<br />
                PS> Install-Package Microsoft.EntityFrameworkCore.InMemory<br />
                PS> Install-Package Azure.Identity<br />
                # OR<br />
                # If you need to use the dotnet commands you can cd into the second WEF directory and issue the below commands.<br />
                PS> dotnet add package Microsoft.EntityFrameworkCore.SqlServer<br />
                PS> dotnet add package Microsoft.EntityFrameworkCore.InMemory<br />
                PS> dotnet add package Azure.Identity<br />
            </code>
        </div>
    </p>
    <p>
        <h2 style=""color: #FFFFFF""><strong>Summary</strong></h2>
        The purpose of this web application is to easily investigate any email alerts received that indicate a possible compromise.
        This server has Windows Event Forwarding (WEF), configured in a ""source collector"" set up. This means that the clients in the envi");
            WriteLiteral(@"ronment initiate connections to the server before sending logs.
        When one of the above event ID's I defined above occur on any of the devices, the event info is forwarded to the WEF source collector server using WinRM over HTTPS. 
        Once an hour the collected event logs are imported into a SQL database. Any newly discovered events that indciate possible compromise trigger an email alert which sends to the IT Administrators.
        This application can be used to search that SQL database. The SQL database is useful because searching a SQL database is 100x faster than parsing the Windows Event Logs through XML. 
        It also stores more criticial events for a longer period of time then the events would exists inside Event Viewer. This is because when Event Viewer logs reach a certain size, old logs are removed to make room for new ones.<br />
        <br />
        <h4 style=""color: #FFFFFF""><strong>Authentication</strong></h4>
        After a user with permission to access the device da");
            WriteLiteral(@"tabase authenticates their identity, they will be taken a new site extension with the ability to search and view events collected by WEF.
        Authentication is handled through Azure AD integration. Members in a group defined by IT have the ability to access the full functionality of the web application after signing in.
        When someone signs in that does not have access to the database they receive an Error Code 500 and they will be denied access.
        Unauthorized users will not be able to access the SQL database or any of itâ€™s features.<br />
        <br />
        <h4 style=""color: #FFFFFF""><strong>Data Functions</strong></h4>
        The columns in the database table can be organized by ascending or descending order. This is done by clicking the blue link column header.
        The search will parse the database by searching for the specified term in all of the columns. Other parameters can be added if ever requested.
        There are presently 10 items displayed per page. This can al");
            WriteLiteral(@"so be changed if ever requested. The same features are available in the rentals area.
        Any of the entries can be deleted in case an event is taking up space. Events can also be shown in a detailed view.<br />
        <br />
        <h4 style=""color: #FFFFFF""><strong>Logging</strong></h4>
        Any and all changes are currently logged through the web platform, the operating system, and the cloud. Custom log messages will be added in a future version to further simplify troubleshooting.
        Error handling has been configured. Please report any errors that do not respond as expected.<br />
        <br />
        <h4 style=""color: #FFFFFF""><strong>Platform Testing</strong></h4>
        Protection against SQL injections and CSRF have been implemented. Penetration testing has been performed to ensure the security of the application. There are no presently discovered vulnerabilities.
    </p>
</div>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
